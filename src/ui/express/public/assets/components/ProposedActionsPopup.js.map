{
  "version": 3,
  "sources": ["../../components/ProposedActionsPopup.js"],
  "sourcesContent": ["/**\r\n * ProposedActionsPopup - UI component for displaying proposed actions\r\n * \r\n * Creates a non-modal popup that displays actions the user can take when\r\n * an operation is refused (e.g., rate limiting).\r\n * \r\n * Features:\r\n * - Non-modal overlay (doesn't block interactions)\r\n * - Close button in top-right corner\r\n * - Clickable action buttons that execute via API\r\n * - Auto-dismiss on successful action\r\n */\r\n\r\n/**\r\n * Create proposed actions popup\r\n * \r\n * @param {Object} options - Popup options\r\n * @param {string} options.title - Popup title\r\n * @param {string} options.message - Error/refusal message\r\n * @param {Array<Object>} options.proposedActions - Array of proposed action objects\r\n * @param {Function} [options.onActionExecuted] - Callback when action succeeds\r\n * @param {Function} [options.onClose] - Callback when popup closes\r\n * @returns {HTMLElement} Popup element\r\n */\r\nfunction createProposedActionsPopup(options) {\r\n  const {\r\n    title = 'Action Required',\r\n    message,\r\n    proposedActions = [],\r\n    onActionExecuted,\r\n    onClose\r\n  } = options;\r\n  \r\n  // Create popup container\r\n  const popup = document.createElement('div');\r\n  popup.className = 'proposed-actions-popup';\r\n  popup.setAttribute('role', 'dialog');\r\n  popup.setAttribute('aria-labelledby', 'popup-title');\r\n  \r\n  // Create overlay backdrop\r\n  const backdrop = document.createElement('div');\r\n  backdrop.className = 'proposed-actions-backdrop';\r\n  \r\n  // Create popup content\r\n  const content = document.createElement('div');\r\n  content.className = 'proposed-actions-content';\r\n  \r\n  // Header with close button\r\n  const header = document.createElement('div');\r\n  header.className = 'proposed-actions-header';\r\n  \r\n  const titleEl = document.createElement('h3');\r\n  titleEl.id = 'popup-title';\r\n  titleEl.textContent = title;\r\n  \r\n  const closeBtn = document.createElement('button');\r\n  closeBtn.className = 'close-button';\r\n  closeBtn.setAttribute('aria-label', 'Close');\r\n  closeBtn.innerHTML = '&times;';\r\n  closeBtn.onclick = () => {\r\n    closePopup(popup, onClose);\r\n  };\r\n  \r\n  header.appendChild(titleEl);\r\n  header.appendChild(closeBtn);\r\n  \r\n  // Message\r\n  const messageEl = document.createElement('div');\r\n  messageEl.className = 'proposed-actions-message';\r\n  messageEl.textContent = message;\r\n  \r\n  // Actions container\r\n  const actionsContainer = document.createElement('div');\r\n  actionsContainer.className = 'proposed-actions-list';\r\n  \r\n  // Sort proposed actions by priority (highest first)\r\n  const sortedActions = [...proposedActions].sort((a, b) => \r\n    (b.priority || 0) - (a.priority || 0)\r\n  );\r\n  \r\n  // Create action cards\r\n  for (const proposedAction of sortedActions) {\r\n    const actionCard = createActionCard(proposedAction, popup, onActionExecuted);\r\n    actionsContainer.appendChild(actionCard);\r\n  }\r\n  \r\n  // Assemble popup\r\n  content.appendChild(header);\r\n  content.appendChild(messageEl);\r\n  content.appendChild(actionsContainer);\r\n  \r\n  backdrop.appendChild(content);\r\n  popup.appendChild(backdrop);\r\n  \r\n  // Add to document\r\n  document.body.appendChild(popup);\r\n  \r\n  // Focus first action button\r\n  setTimeout(() => {\r\n    const firstButton = actionsContainer.querySelector('.action-execute-btn');\r\n    if (firstButton) {\r\n      firstButton.focus();\r\n    }\r\n  }, 100);\r\n  \r\n  return popup;\r\n}\r\n\r\n/**\r\n * Create action card for proposed action\r\n * \r\n * @param {Object} proposedAction - Proposed action object\r\n * @param {HTMLElement} popup - Popup element (for closing after action)\r\n * @param {Function} onActionExecuted - Callback when action succeeds\r\n * @returns {HTMLElement} Action card element\r\n */\r\nfunction createActionCard(proposedAction, popup, onActionExecuted) {\r\n  const { action, reason, description, severity } = proposedAction;\r\n  \r\n  const card = document.createElement('div');\r\n  card.className = `action-card severity-${severity || 'info'}`;\r\n  \r\n  // Action label\r\n  const labelEl = document.createElement('div');\r\n  labelEl.className = 'action-label';\r\n  labelEl.textContent = action.label;\r\n  \r\n  // Reason\r\n  const reasonEl = document.createElement('div');\r\n  reasonEl.className = 'action-reason';\r\n  reasonEl.textContent = reason;\r\n  \r\n  // Description (if provided)\r\n  if (description) {\r\n    const descEl = document.createElement('div');\r\n    descEl.className = 'action-description';\r\n    descEl.textContent = description;\r\n    card.appendChild(descEl);\r\n  }\r\n  \r\n  // Execute button\r\n  const executeBtn = document.createElement('button');\r\n  executeBtn.className = 'action-execute-btn btn btn-primary';\r\n  executeBtn.textContent = action.label;\r\n  executeBtn.onclick = async () => {\r\n    await executeAction(action, executeBtn, popup, onActionExecuted);\r\n  };\r\n  \r\n  card.appendChild(reasonEl);\r\n  card.appendChild(executeBtn);\r\n  \r\n  return card;\r\n}\r\n\r\n/**\r\n * Execute a proposed action\r\n * \r\n * @param {Object} action - Action object\r\n * @param {HTMLButtonElement} button - Button that triggered action\r\n * @param {HTMLElement} popup - Popup element\r\n * @param {Function} onActionExecuted - Success callback\r\n */\r\nasync function executeAction(action, button, popup, onActionExecuted) {\r\n  const originalText = button.textContent;\r\n  button.disabled = true;\r\n  button.textContent = 'Executing...';\r\n  \r\n  try {\r\n    const response = await fetch('/api/background-tasks/actions/execute', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ action })\r\n    });\r\n    \r\n    const result = await response.json();\r\n    \r\n    if (!response.ok || !result.success) {\r\n      throw new Error(result.error?.message || 'Action execution failed');\r\n    }\r\n    \r\n    // Success!\r\n    button.textContent = '\u2713 Done';\r\n    button.className = 'action-execute-btn btn btn-success';\r\n    \r\n    // Notify callback\r\n    if (typeof onActionExecuted === 'function') {\r\n      onActionExecuted(result);\r\n    }\r\n    \r\n    // Close popup after short delay\r\n    setTimeout(() => {\r\n      closePopup(popup);\r\n    }, 500);\r\n    \r\n  } catch (error) {\r\n    console.error('[ProposedActionsPopup] Action execution failed:', error);\r\n    button.textContent = originalText;\r\n    button.disabled = false;\r\n    \r\n    // Show error message\r\n    const errorMsg = document.createElement('div');\r\n    errorMsg.className = 'action-error';\r\n    errorMsg.textContent = `Error: ${error.message}`;\r\n    button.parentElement.appendChild(errorMsg);\r\n    \r\n    setTimeout(() => {\r\n      errorMsg.remove();\r\n    }, 3000);\r\n  }\r\n}\r\n\r\n/**\r\n * Close popup\r\n * \r\n * @param {HTMLElement} popup - Popup element\r\n * @param {Function} [onClose] - Close callback\r\n */\r\nfunction closePopup(popup, onClose) {\r\n  if (popup && popup.parentElement) {\r\n    popup.remove();\r\n  }\r\n  \r\n  if (typeof onClose === 'function') {\r\n    onClose();\r\n  }\r\n}\r\n\r\n/**\r\n * Show proposed actions popup\r\n * \r\n * @param {Object} error - Error response from API (429 status)\r\n * @param {Function} [onActionExecuted] - Callback when action succeeds\r\n */\r\nfunction showProposedActionsPopup(error, onActionExecuted) {\r\n  if (!error.proposedActions || error.proposedActions.length === 0) {\r\n    console.warn('[ProposedActionsPopup] No proposed actions provided');\r\n    return;\r\n  }\r\n  \r\n  createProposedActionsPopup({\r\n    title: 'Cannot Start Task',\r\n    message: error.error?.message || error.message || 'Operation refused',\r\n    proposedActions: error.proposedActions,\r\n    onActionExecuted: (result) => {\r\n      console.log('[ProposedActionsPopup] Action executed successfully:', result);\r\n      \r\n      if (typeof onActionExecuted === 'function') {\r\n        onActionExecuted(result);\r\n      }\r\n    },\r\n    onClose: () => {\r\n      console.log('[ProposedActionsPopup] Popup closed');\r\n    }\r\n  });\r\n}\r\n\r\n// Export for use in other modules\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = {\r\n    createProposedActionsPopup,\r\n    showProposedActionsPopup\r\n  };\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
